{
  "commissionfee": {
    "title": "Commission Fee Adjustment Proposal",
    "description": "StaFi is committed to continuously improving our products to ensure the best possible user experience. Given the competitive market for Liquid Staking Derivatives (LSD), we have decided to adjust our strategy in order to further expand our reach. After conducting a detailed comparison between StaFi and other LSD protocols, we are proposing to update our commission fee structure for our Staking Derivatives.",
    "date": "2023-03-01T00:00:00.000Z",
    "status": 1,
    "ipfshash": null,
    "snapshotlink": null,
    "preview": "StaFi is committed to continuously improving our products to ensure …",
    "content": "\n\nStaFi is committed to continuously improving our products to ensure the best possible user experience. Given the competitive market for Liquid Staking Derivatives (LSD), we have decided to adjust our strategy in order to further expand our reach. After conducting a detailed comparison between StaFi and other LSD protocols, we are proposing to update our commission fee structure for our Staking Derivatives.\n\n# Abstract\n\nWe propose adjusting the commission fee to 10%. Please note that StaFi only charges an overall commission fee of 10% from the staking reward in the pool. Out of the 10% commission fee, 5% will be allocated to the StaFi DAO treasury and 5% will be allocated to validators.\n\nBy implementing this approach, stakers and validators will receive greater benefits from StaFi’s staking services, but it may result in a decrease in income for the StaFi DAO treasury to a certain degree.\n\n# Motivation\n\nAs the Ethereum Shanghai Upgrade approaches, it is expected to not only enable ETH withdrawals but also accelerate the growth of the Liquid Staking Derivatives (LSD) industry. This will bring more confidence to users and may attract more participation from large and institutional investors. Additionally, the current Ethereum network’s Staking Ratio stands at 13.79%, with over 15 million ETHs deposited. Considering the size of the Ethereum network, this is a minuscule fraction of the total supply.\n\nTo benefit from this wave of stakers that the Ethereum upgrade will bring and make StaFi stand out from its competitors to further capture a larger portion of the market, we will need to solve two vital problems: the lack of liquidity for rETH and the rETH Depeg problem. These two problems are strongly correlated, as rETH liquidity is fundamental to maintaining its Peg as well as perpetuating DeFi use cases. The ETH Peg issue could be solved through arbitraging liquidity pools making rETH suitable to be used as the base for DeFi Applications, such as Leveraged Staking and Lending/Borrowing Protocols.\n\nThe StaFi team is actively exploring various solutions to tackle the issue of rETH liquidity. Our approach includes incentivizing liquidity pools and improving our staking products. Regarding liquidity incentives, we are presently engaging with multiple decentralized exchanges (DEXs), such as Balancer and Camelot, to include rETH incentives in their pools. We are also connecting with lending protocols like Radiant and Demex to establish rETH Defi use cases. Additionally, in terms of product improvement, we recently launched our new rToken App, which significantly enhances the user experience and simplifies staking with LSDs. As a result, we are now focusing on improving our user commission fees as another aspect of product enhancement.\n\n# Specifications\n\n## The need to reduce Commission Fees\n\nGiven the highly competitive market for Liquid Staking Derivatives, StaFi is currently exploring all possible avenues to attract more users and achieve rapid growth. A potential strategy is to reduce user commission fees, as this has proven to be an effective way of incentivizing users to stake. Lower fees may also improve rETH APY and help maintain the peg of ETH/rETH by increasing the pool’s depth and liquidity, thereby contributing to the overall growth of the StaFi ecosystem.\n\n## Commission Fee Structure: 10% overall Commission Fee with 5% commissions paid to validators\n\nThe StaFi Foundation is committed to prioritizing growth above all else. In order for StaFi to be a mutually beneficial ecosystem, it is crucial to incentivize stakers to participate in the project and contribute to its growth.\n\nThere are several commission fee structures available for selection. One of them would be to follow the majority of projects and charge a total of 10% user commission fees. The commission rate received by the validator will change based on the amount of ETH they stake. All validators will have a base commission rate, which increases as they stake more. This encourages validators to stake and run nodes. Additionally, our minimum threshold is only 4 ETH to run a node, which is relatively low compared to all other projects on the market.\n\nAnother option is for the Foundation to collect 10% of all profits in the pool, with 5% going to the validator and 5% to the StaFi Treasury. This option aligns with the commission fee structure of the majority of decentralized LSD projects and may be more attractive to users due to its lower fee. However, the earnings of the validator and the StaFi Treasury will also decrease to a certain extent with the reduction in user fees. Nonetheless, we believe that as long as more new users are added, the total earnings will definitely be higher.\n\nAfter conducting a comprehensive comparison of other LSD projects in the market and considering StaFi’s current strategic development needs and technical human resources, the Foundation has decided to implement the second option of charging a 10% overall commission fee. This decision was made to attract more users to stake in StaFi.\n\nThe Foundation may make further adjustments to the commission fee structure based on development needs and community feedback in the future.\n\n## Comparison between StaFi and other LSD projects\n\n\n## Comparison of old and new Commission Fee Structures\n\nBefore:\n\nUsers are charged a 19% staking reward commission.\n\nValidators get 10%*(1–10%) of overall staking rewards and are charged a 10% staking reward commission of their own staking capital part.\n\nExample: After earning a 1 ETH reward, StaFi takes a 10% cut, and the validator takes 10% of the remaining fees. The distribution of the remaining 81% ETH reward is based on the ratio of the validator’s capital to the user’s capital.\n\nAfter:\n\nOverall, a 10% commission is charged on staking rewards, with 5% allocated to validators and 5% to the StaFi DAO Treasury.\n\nExample: After earning a 1 ETH reward, StaFi takes a 10% cut, allocating 5% to validators and 5% to the StaFi DAO Treasury. The distribution of the remaining 90% ETH reward is based on the ratio of the validator’s capital to the user’s capital.\n\n## Comparison of old and new commission fee structures for Validators\n\nExample:\n\nAlice is a solo validator for StaFi, with a staked amount of 4 ETH. When the StaFi pool received a 1 ETH reward, the pool’s total staked amount was 32 ETH.\n\n**Before**:\n- Rewards: 1*9% + 1*81% * 4/32 = 0.19125 ETH\n- Final Rewards: 0.19125 * (1–10%) = 0.172125 ETH\n\n**After**:\n- Rewards: 1*5% + 1*90%*4/32=0.1625 ETH\n- Final Rewards: 0.1625 * (1–5%)=0.154375 ETH\n\n## StaFi DAO Treasury Commissions\n- Before: Gets 10% from the Staking Pool\n- After: Gets 5% from the Staking Pool\n\n# Conclusion\n\nThe team is currently focused on making improvements to the platform, and once approved, the proposed changes to the commission fee calculation mechanism will be implemented in one week following this proposal. The new mechanism will come into effect as soon as it is developed. There will be no changes to the rules for calculating staked tokens.\n\nYour feedback and suggestions regarding this proposal are highly valued, and we encourage you to leave a comment below if you have any ideas for changes or additions that could benefit the community.\n",
    "iso8601Date": "2023-03-01T00:00:00+00:00",
    "basename": "commissionfee"
  },
  "sip1": {
    "title": "[SIP-1] LST for EVM compatible chains",
    "description": "The EVM Network has become one of the most popular and influential blockchain networks. However, using the current approach to build LST on these chains would result in high costs and a poor user experience for users, as well as limited scalability for StaFi, requiring significant development effort.",
    "date": "2023-03-01T00:00:00.000Z",
    "status": 2,
    "ipfshash": "QmVxQFxENa5mtYS7VDv9KX4cCDURt45gK2SJFt9rwVCgCw",
    "snapshotlink": null,
    "preview": "# Problem\n\n- When users stake EVM Network tokens such as BNB or …",
    "content": "\n\n# Problem\n\n- When users stake EVM Network tokens such as BNB or MATIC, they need to connect two wallets and sign multiple transactions to complete the staking process.\n- When users interact with decentralized exchanges (DEX) on Ethereum, BSC, or Polygon using rTokens, if the rToken is on StaFi Chain, they will need to pay additional gas fees to bridge the rToken to the target chain.\n\n# Motivation\n\nThe EVM Network has become one of the most popular and influential blockchain networks. However, using the current approach to build LST on these chains would result in high costs and a poor user experience for users, as well as limited scalability for StaFi, requiring significant development effort. This SIP provides a solution that can reduce transaction costs and usage barriers for users while maintaining scalability as a general architecture.\n\n# Specification\n\n## Overview\n\nThe newly proposed EVM LST solution is redesigned for security and composability. Differing from the current solution, the main feature of the new solution is that rToken will be directly issued on the target chain. This eliminates the need for cross-chain communication when users obtain rTokens, and enables easy integration of rToken into DeFis on the target chain, given the same token standard.\n\nThe primary difference between the two solutions lies in the ecosystem of the chain on which rToken issuance depends. To promote composability, target chains should have a variety of use cases for rTokens, including DEXes, Lendings, Options, Index, and more. This will facilitate widespread adoption of rToken. If such use cases are not available on the target chain, we would suggest issuing rToken on StaFi Chain, as rDEX will be able to serve as the DEX for rToken trading on that platform.\n\nPreconditions for the new solution:\n\n- The target chain should have a contract layer\n- The staking model is built within the contract layer\n\nAs the solution is mainly built for EVM LSD, the contract layer should also be EVM compatible. While it is theoretically possible to implement the solution on all VMs, evaluation would need to be performed for VMs with different sets.\n\nIf the preconditions are not met, the development process will be costly and time-consuming, and there may not be a feasible solution for the chain. On the other hand, the benefits of the new EVM LSD solution are obvious, offering high-level security and composability. Additionally, an EVM-compatible chain with a staking model would be similar to StaFi’s, making the integration process straightforward and simple, potentially only requiring a copy-paste approach.\n\n## Architecture\n\nThe current architecture\n\nThe new architecture\n\n- Target Chain: The chain intends to support LSTs, such as rETH on Ethereum.\n- Staking Contracts: On-chain processing logic for StaFi staking.\n- Original Staking Contract: The original staking contract is a smart contract that allows users to stake their tokens in order to participate in the network’s consensus mechanism and earn rewards, such as deposit contract on Ethereum.\n- rToken Relay: Listens for events, handles numerical computations, votes to the staking contracts, and processes staking data once per era.\n- rToken: Only support the target chain’s token standard, such as ERC20 on Ethereum.\n\n## Interface and Integration\n\nWe have previously studied multi-wallet components 1 that currently only support EVM Network. We plan to integrate these components into the frontend and also integrate more EVM Network services for data analysis and security.\n\n# Security Considerations\n- Security module: The migration process involves shifting the security module from chain security to contract security, which presents potential security vulnerabilities that must be carefully monitored and addressed.\n- Contract layer: The migration from rust-solidity also poses potential risks to the contract layer, which must be assessed and managed to ensure the overall integrity and security of the solution.\n\n# Copyright\n\nCopyright and related rights waived via CC0.",
    "iso8601Date": "2023-03-01T00:00:00+00:00",
    "basename": "sip1"
  },
  "sip2": {
    "title": "[SIP-2] StaFi Tokenomics V2",
    "description": "As the rToken solution extends across numerous ecosystems - including Layer1s, sidechains, Cosmos appchains, and beyond - the tokenomics of StaFi are confronted with challenges that need to support this expansion. These challenges consist of balancing the value of rTokens with chain security, incentivizing validators in StaFi appchains, and establishing a robust on-chain voting system for governance. The issues at hand largely center around the complex nature of the intertwined tokenomics, which include FIS tokenomics, rTokenomics, and appchain tokenomics.",
    "date": "2023-03-01T00:00:00.000Z",
    "status": 2,
    "ipfshash": null,
    "snapshotlink": null,
    "preview": "# Introduction\n\nAs the rToken solution extends across numerous …",
    "content": "\n\n# Introduction\n\nAs the rToken solution extends across numerous ecosystems - including Layer1s, sidechains, Cosmos appchains, and beyond - the tokenomics of StaFi are confronted with challenges that need to support this expansion. These challenges consist of balancing the value of rTokens with chain security, incentivizing validators in StaFi appchains, and establishing a robust on-chain voting system for governance. The issues at hand largely center around the complex nature of the intertwined tokenomics, which include FIS tokenomics, rTokenomics, and appchain tokenomics.\n\nStaFi is progressing towards becoming a leading liquid staking infrastructure provider, aiming to offer solutions for the majority of PoS chains. Consequently, ensuring our tokenomics are sustainably updated is essential. Moreover, the rToken solution has been extensively developed for nearly two years, with the staked value in StaFi reaching $60 million. As the native token of the StaFi Protocol, FIS should bear the responsibility of capturing value alongside the growth of rTokens.\n\nThis proposal is aimed to provide a comprehensive explanation of our plan to update StaFi’s tokenomics. By offering a detailed outline of the process, StaFi can better engage with the community and receive valuable feedback. Additionally, we aim to utilize this opportunity to ensure the delivery of a high-quality product by StaFi.\n\n# Why Adopt StaFi Tokenomic V2\n\nThe LSD market is experiencing rapid changes, demanding scalable and secure rToken solutions to keep up with this trend. In response to these changes, StaFi is actively developing an open LSD infrastructure for the market. The goal is to create a product that can not only address current challenges in Layer1 tokens, but also effectively tackle future issues that may arise. StaFi’s commitment to enhancing competitiveness revolves around a deep understanding of the PoS mechanism, which will serve as a crucial feature for other LSD providers to emulate.\n\nTo grasp the urgency of the impending shift, we must first comprehend the existing landscape. The fast-paced expansion of rTokens across various rToken appchains has led to a complex tokenomic structure. Presently, StaFi operates two distinct appchains, with the prospect of additional ones in the future. While FIS staking in StaFiChain is permissionless, staking in StaFiHub is yet to be community-led and is currently managed by a trusted validator set. The incentive for these validators stems from the treasury of StaFiChain. As explained in rTokenomic V1 2, running two staking mechanisms simultaneously is untenable. Moreover, there may be concerns about centralization and chain security if the value staked in rTokens issued on StaFiHub grows significantly. Inflation-induced FIS rewards from the treasury contribute to FIS supply dilution, but this is a necessary expenditure to maintain an appchain.\n\nStaFi has proposed launching more Appchains, such as the StaFi Subnet on Avalanche, StaFi Paratime on Oasis, StaFi Supernet on Polygon, and others. However, the introduction of multiple Appchains further complicates StaFi’s Tokenomics and puts its security and decentralization at risk.\n\nTo put it simply, FIS cannot concurrently serve as the native token for multiple appchains, as its inflated value would be insufficient to safeguard the staked value of rTokens.\n\nFor StaFi to achieve enhanced scalability, it’s crucial to disassociate the security of rTokens from that of the appchains. The rTokenomics need to be adequately protected, receiving inherent security from the target chain. There are two main strategies currently available: issuing rTokens in the target chain or adopting a shared consensus mechanism.\n\nIn essence, StaFi Tokenomic V2 is an upgrade to the tokenomic structure, offering the StaFi community a comprehensive understanding of how various systems operate in tandem. As an asset management platform and an open LSD infrastructure, rTokens are issued on appchains, and appchains with consensus adhere to a distinct tokenomic model. Concurrently, FIS acts as a behind-the-scenes facilitator, transferring value within these appchains. This triadic structure might appear perplexing to the community, and even the first iterations of StaFi Tokenomic and rTokenomic didn’t fully consider LSD extensions. Tokenomics V2 is purposefully designed to navigate the intricate relationships amongst these StaFi participants, with the aim of making it more accessible and sustainable. This implies upcoming changes in StaFi’s tokenomics.\n\nIn conclusion, these new modifications will facilitate the sustainable growth and governance of StaFi, create value for FIS, substantially bolster rToken security, and ensure the scalability of the rToken solution for prospective expansion.\n\n# Specifications\n\nThis proposal is designed to revamp the tokenomics of FIS, rTokens, and StaFi appchains. The following updates will adhere to the following principles:\n\n- Keep the tokenomics as simple as possible.\n- Ensure that the StaFi protocol remains sustainable, interoperable, and scalable.\n- Enhance the value and governance roles of FIS for its holders in tandem with the ecosystem’s growth.\n\nThese principles will profoundly influence the StaFi tokenomics. The primary proposed changes include:\n\n- FIS Tokenomics: FIS will remain the primary token of StaFiChain (deployed on Polkadot Substrate), and it will continue to be bridgeable to Ethereum (ERC20), StaFiHub (deployed on Cosmos SDK, ICS20), and more among other chains. Governance voting will be exclusively performed on StaFiChain, and subsequent aspects can be finalized, including burn strategy, inflation strategy, and treasury usage, among others.\n- rTokenomics: Apart from rFIS, rTokens will be decoupled from the security of StaFi appchains. This would result in the staked value being safeguarded by the target chain instead of StaFi. The rToken issuance contract will be deployed on the target chains, thereby enhancing rTokens’ interoperability.\n- Appchain Tokenomics: The security provider for the StaFi appchains will be determined based on usage. The FIS appchain will rely on staked FIS for security. EVM rTokens will utilize the security of the target chains, while Cosmos rTokens can acquire security from ATOM stakers via the ICS module. EVM LSD’s and Cosmos LSD’s can address the majority of situations in the PoS chains space, and additional infrastructures may be provided to new Layer1 tokens as a supplement , such as Move LSD infrastructure.\n\nThe proposed alterations require updates to two open LSD infrastructures: previously issued rTokens, such as rBNB and rMATIC, that were deployed on StaFiChain, will be migrated and re-deployed on the target chain. rTokens issued on StaFiHub, like rATOM and rIRIS will remain the same, but the consensus will be updated to incorporate the ICS security module. Future rTokens will employ either the EVM LSD or Cosmos LSD solution for mainnet launches.\n\nPost-update, the security of StaFiChain will be ensured by staked FIS. There will be no TVL in StaFiChain apart from rFIS TVL. Regarding the ICS integration, StaFi will distribute FIS from its treasury to incentivize Cosmos security providers. Security will be anchored on staked ATOM but will be related to FIS.\n\nThere are no significant changes to the utility of FIS in Tokenomic V2. However, the utilities are now more distinct and easier to comprehend. Primary utilities include:\n\n- Staking: Staking FIS provides security to the chain, yielding rewards and gaining voting power in return.\n- Governance: FIS holders are owners of StaFi and can stake FIS to govern both StaFi and rToken solutions.\n- Value Capture: FIS holders can capitalize on the value generated by the rToken solutions.\n\nFIS’s inflation and burn mechanisms will follow the same rules 3 set in V1. Parts of the inflated FIS goes to the Treasury, which depends on the staking ratio of FIS. The burn mechanism can be activated if the FIS in the Treasury has not been used in a certain period of time. The period is a timer set in the genesis. Even the inflation can be updated in the governance. The Treasury is an engine that bootstraps and keeps StaFi sustainable in the long run.\n\nStaFi charges a commission ranging from 5% to 10% from different rToken solutions, and an additional redemption fee may apply. These fees are sent to the treasury pool. As more fees are generated from rToken solutions, FIS holders have the right to decide how to utilize these rewards. They can be distributed among FIS holders, remain in the Treasury, or be used for the buy-back-burn strategy.\n\nAll the parameters mentioned above can be voted on-chain and updated by the community. Governance proposals will be raised on StaFiChain, and staked FIS and rFIS (backed by staked FIS) holders can gain voting power. They have the right to govern the direction of StaFi.\n\n# Roadmap\n\nTo achieve the roadmap of an open LSD infrastructure, progressive steps need to be taken. The first milestone or priority should be the adoption of shared/replicated security. After that, appchain security should be decoupled from StaFiChain, and then rTokens solution can be decoupled from the appchains. This means that rTokens should be redeployed on the target chains. In this process, it would be possible to form an LSD infrastructure to be a LSD middleware, which means a more generalized structure, even an LSD SDK.\n\nThere will be challenges. ICS integration would need to be voted on and passed by the Cosmos governance. Abstracting a LSD middleware as an infrastructure may face a generalized issue. Even a LSD SDK may not be applicable for the market as it changes rapidly. However, with the update of the Tokenomics of StaFi, StaFi has more possibilities in the staking industry.\n\n# ICS integration\n\nStaFi proposes ICS integration as a means to decouple security between chains and total value locked (TVL). Considering that Cosmos has a larger staked value and consequently a higher market cap, ICS can offer enhanced security to other chains with LSDs. StaFiHub is pushing for ICS integration to unlock more possibilities for future LSDs. The success of Neutron 1, the first consumer chain to utilize ICS, provides a compelling case for this integration. By leveraging security from Cosmos, Neutron has positioned itself as a DeFi hub within the Cosmos ecosystem. Following this model, StaFi aims to replicate this security through Cosmos ICS, with a formal proposal set to follow.\n\n# rToken decoupling\n\nThe decoupling of rTokens comprises two components. First, it involves the adoption of ICS for rTokens within StaFiHub, which will separate rToken security from StaFiHub. The second component is related to rTokens within StaFiChain. Apart from rFIS, all rTokens will gradually shift towards either the EVM LSD solution or the VM LSD solution. As part of this transition, these rTokens will be redeployed on their respective target chains, a process which will require time for development and audits. The abstraction of LSD infra will occur simultaneously. Once completed, the rToken solution will be scalable.\n\n# Governance\n\nStaFiChain is set to activate its governance in the near future. In this new arrangement, appchains will no longer carry the prefix “StaFi-xx.” Instead, they will be referred to by their deployment in the target chain system. For instance, StaFiHub will be renamed as “StaFi deployed on Cosmos,” and StaFi Subnet will become “StaFi deployed on Avalanche.” FIS staked in StaFi deployments using the Substrate framework will govern all solutions.\n\nProposals can be raised on a variety of subjects, such as Treasury usage, inflation rate, rToken commission, and rToken deployment. Further details about on-chain voting, including FIS voting, the voting system, and the voting quorum, will be clarified through a governance proposal. This proposal will outline the governance process for the future.\n\n# Tools\n\nThere will be a variety of tools available to display statistics related to rTokens, governance, integrations, liquidity, transparency, and more. Additionally, the integration of third-party tools will be crucial for establishing a complete LSD infrastructure. For instance, Dune, Defillama and Token Terminal have already been integrated to display rToken-related statistics. These tools keep track of the visualizations of token performance, market related trends and data, and trading volumes across multiple exchanges. As the LSD infrastructure expands and evolves, the range of tools and integrations will also grow, offering users more ways to engage with the platform and refine their trading strategies.\n\n# Benefits\n\nThe proposed changes offer clear advantages. By decoupling StaFi’s Tokenomics from the security of rTokens, the protocol will enjoy enhanced scalability, leading to a more decentralized and transparent future. As we transition towards a Decentralized Autonomous Organization (DAO), we will see the elimination of permissioned Appchains, no constraints on growing staked value, and a strategic progression of StaFi in the right direction.\n\nHowever, these changes also bring potential drawbacks, particularly concerning FIS tokenomics. Questions arise, such as how to capture value growth when rTokens and appchains are decoupled from StaFi. Although the utility of the FIS token hasn’t dramatically changed, its role has evolved more towards that of a governance token. With voting power tied to staking, FIS stakers can determine treasury usage and govern protocol updates. Despite decoupling, FIS remains a key driver of the protocol and community. The implications for FIS tokenomics will become clearer as development progresses.\n\n# Risk\n\n- Smart Contracts: These form the backbone of any decentralized finance (DeFi) system, including StaFi. However, as with any cryptographic application, they carry inherent risks such as coding vulnerabilities or potential hacking.\n- Decoupled Migration: The proposed strategy involves redeploying rTokens to a different chain. This necessitates a migration process where assets are transferred from StaFi appchains to the target chain. This process could introduce risks associated with redeployment and asset migration.\n- Integration Failure: StaFiHub is exploring integration with the Inter-Blockchain Communication (ICS) protocol. However, this endeavor could fail if Cosmos stakers deny access, disrupting the planned expansion.\n\nAs with any major change, there may be unforeseen risks associated with the proposed modifications. We encourage community members to share their insights and concerns.\n\nThis is an open forum for discussion. None of the proposed changes will be implemented before a thorough community discourse has taken place. If no substantial feedback is received, the core team will initiate the proposed changes on the mainnet in the near future. Subsequently, the roadmap will guide governance voting and the activation of an on-chain proposal system for the community.",
    "iso8601Date": "2023-03-01T00:00:00+00:00",
    "basename": "sip2"
  },
  "sip3": {
    "title": "[SIP-3]A New Implementation of rBNB using EVM LSD Architecture",
    "description": "As the rToken solution extends across numerous ecosystems - including Layer1s, sidechains, Cosmos appchains, and beyond - the tokenomics of StaFi are confronted with challenges that need to support this expansion. These challenges consist of balancing the value of rTokens with chain security, incentivizing validators in StaFi appchains, and establishing a robust on-chain voting system for governance. The issues at hand largely center around the complex nature of the intertwined tokenomics, which include FIS tokenomics, rTokenomics, and appchain tokenomics.",
    "date": "2023-03-01T00:00:00.000Z",
    "status": 2,
    "ipfshash": null,
    "snapshotlink": null,
    "preview": "# Abstract\n\nIn SIP-1 2, we discussed the benefits of the EVM LSD …",
    "content": "\n\n# Abstract\n\nIn SIP-1 2, we discussed the benefits of the EVM LSD universal architecture. In SIP-2, we discussed the decoupling of rTokens.This proposal suggests migrating rBNB to the new architecture and decoupling it . After the migration is completed, both the usability and security of rBNB will be improved.\n\n# Motivation\n\nrBNB is an important part of the rToken, issued on the StaFi Chain. However, there are some usability issues. Firstly, users need to have two wallets and sign multiple transactions to mint rBNB. Secondly, if users want to participate in DEX trading on Binance Smart Chain (BSC), they need to bridge rBNB from the StaFi Chain to BSC. Finally, burning rBNB requires doing it on the StaFi Chain, which means bridging rBNB from BSC back to the StaFi Chain.\n\nSwitching rBNB to the EVM LSD architecture can solve the usability issues mentioned above. Additionally, we have made some security updates, including introducing the Native Staking contract interface for BSC, multisig and simplifying relay services, among others.\n\n# Specification\n\n## Overview\n\nThere are mainly three components:\n\n- Staking contracts on BSC: A new set of contracts has been designed to implement liquid staking on the BSC.\n- rBNB relay: A newly designed and simplified service is used to trigger Era updates in the contract for delegation and undelegation operations. Additionally, it synchronizes unrewarded data from the BSC chain that has not yet been synced to the contract to ensure the accuracy of rBNB exchange rates.\n- System staking contract on BSC: A system contract in charge of handling staking requests on BSC.\n\n## Contract\n\nThis new set of contracts has been specifically designed to enable liquid staking on the BSC, offering all the fundamental features of a BNB liquid staking service, including minting and burning rBNB, depositing and withdrawing BNB, as well as staking pool management, among other functionalities.\n\n### System Staking Contract Interface\n\nThe BSC provides contract interfaces for staking, which enable the implementation of staking-related features on the BSC by using IStaking.sol.\n\n```js\npragma solidity 0.7.6;\n\n// SPDX-License-Identifier: GPL-3.0-only\n\ninterface IStaking {\n    function delegate(address validator, uint256 amount) external payable;\n\n    function undelegate(address validator, uint256 amount) external payable;\n\n    function redelegate(address validatorSrc, address validatorDst, uint256 amount) external payable;\n\n    function claimReward() external returns (uint256);\n\n    function claimUndelegated() external returns (uint256);\n\n    function getDelegated(address delegator, address validator) external view returns (uint256);\n\n    function getTotalDelegated(address delegator) external view returns (uint256);\n\n    function getDistributedReward(address delegator) external view returns (uint256);\n\n    function getPendingRedelegateTime(\n        address delegator,\n        address valSrc,\n        address valDst\n    ) external view returns (uint256);\n\n    function getUndelegated(address delegator) external view returns (uint256);\n\n    function getPendingUndelegateTime(address delegator, address validator) external view returns (uint256);\n\n    function getRelayerFee() external view returns (uint256);\n\n    function getMinDelegation() external view returns (uint256);\n\n    function getRequestInFly(address delegator) external view returns (uint256[3] memory);\n}\n```\n### Staking Pool\n\n**Data Structs**\n\n```js\nEnumerableSet.AddressSet bondedPools;\nmapping(address => PoolInfo) public poolInfoOf;\nmapping(address => EnumerableSet.AddressSet) validatorsOf;\nmapping(address => uint256) public latestRewardTimestampOf;\nmapping(address => uint256) public undistributedRewardOf;\nmapping(address => uint256) public pendingDelegateOf;\nmapping(address => uint256) public pendingUndelegateOf;\nmapping(address => mapping(address => uint256)) public delegatedOfValidator; // delegator => validator => amount\nmapping(address => bool) waitingRemovedValidator;\nmapping(uint256 => uint256) public eraRate;\n\n// unstake info\nuint256 public nextUnstakeIndex;\nmapping(uint256 => UnstakeInfo) public unstakeAtIndex;\nmapping(address => EnumerableSet.UintSet) unstakeOfUser;\n```\n\n- `poolInfoOf`: record the information and status about the staking pool .\n- `validatorsOf`: record sets of validator addresses, where each set represents the validators to which StaFi has delegated staking pool BNB.\n- `latestRewardTimestampOf`: record the block number of the last time the StaFi received staking rewards.\n- `undistributedRewardOf`: record the undistributed staking rewards.\n- `pendingDelegateOf`: record pending delegated amounts.\n- `pendingUndelegateOf`: record pending undelegated amounts.\n- `delegatedOfValidator`: record the delegated amounts to this validator.\n- `waitingRemovedValidator`: record whether this validator is waiting to be removed.\n- `eraRate`: record rBNB exchange rate\n- `unstakeAtIndex`: record the unstake info.\n- `unstakeOfUser`: record the unbond index of users who have not withdrawn.\n\n**Events**\n\n```js\nevent Stake(address staker, address poolAddress, uint256 tokenAmount, uint256 rTokenAmount);\nevent Unstake(address staker, address poolAddress, uint256 tokenAmount, uint256 rTokenAmount, uint256 burnAmount,uint256 unstakeIndex);\nevent Withdraw(address staker, address poolAddress, uint256 tokenAmount, uint256[] unstakeIndexList);\nevent ExecuteNewEra(uint256 indexed era, uint256 rate);\nevent Settle(uint256 indexed era, address indexed pool);\nevent RepairDelegated(address pool, address validator, uint256 govDelegated, uint256 localDelegated);\nevent SetUnbondingDuration(uint256 unbondingDuration);\nevent Delegate(address pool, address validator, uint256 amount);\nevent Undelegate(address pool, address validator, uint256 amount);\n```\n\n**Function**\n\n`getRate`: get the exchange rate of rBNB.\n\n```js\nfunction getRate() external view override returns (uint256) {\n  return rate;\n}\n```\n\n`getBondedPools`: get the sets of staking pool addresses.\n\n```js\nfunction getBondedPools() external view returns (address[] memory pools) {\n        pools = new address[](bondedPools.length());\n        for (uint256 i = 0; i < bondedPools.length(); ++i) {\n            pools[i] = bondedPools.at(i);\n        }\n        return pools;\n    }\n```\n\n`getValidatorsOf`: get the sets of validator addresses, where each set represents the validators to which StaFi has delegated staking pool BNB.\n\n```js\nfunction getValidatorsOf(address _poolAddress) external view returns (address[] memory validators) {\n        validators = new address[](validatorsOf[_poolAddress].length());\n        for (uint256 i = 0; i < validatorsOf[_poolAddress].length(); ++i) {\n            validators[i] = validatorsOf[_poolAddress].at(i);\n        }\n        return validators;\n    }\n```\n`getUnstakeIndexListOf`: get the unstake index List.\n\n```js\nfunction getUnstakeIndexListOf(address _staker) external view returns (uint256[] memory unstakeIndexList) {\n        unstakeIndexList = new uint256[](unstakeOfUser[_staker].length());\n        for (uint256 i = 0; i < unstakeOfUser[_staker].length(); ++i) {\n            unstakeIndexList[i] = unstakeOfUser[_staker].at(i);\n        }\n        return unstakeIndexList;\n    }\n```\n\n`stake`: allow users to perform stake operations, stake BNB into the staking pool, and receive rBNB in return.\n\n```js\nfunction stake(uint256 _stakeAmount) external payable {\n        stakeWithPool(bondedPools.at(0), _stakeAmount);\n    }\n```\n\n`unstake`: allow users to perform unstake operations, burn rBNB, and record the corresponding amount of BNB.\n\n```js\nfunction unstake(uint256 _rTokenAmount) external payable {\n        unstakeWithPool(bondedPools.at(0), _rTokenAmount);\n    }\n```\n\n`withdraw`: allow users to perform withdrawal operations and withdraw unstaked BNB to their wallet.\n\n```js\nfunction withdraw() external payable {\n        withdrawWithPool(bondedPools.at(0));\n    }\n```\n\n`settle`: permissionless, allow users to update delegation and undelegation by calling the contract, enabling them to claim their principal and reward in a fully decentralized manner.\n\n```js\nfunction settle(address _poolAddress) public {\n        require(bondedPools.contains(_poolAddress), \"pool not exist\");\n        _checkAndRepairDelegated(_poolAddress);\n\n        // claim undelegated\n        IStakePool(_poolAddress).checkAndClaimUndelegated();\n\n        PoolInfo memory poolInfo = poolInfoOf[_poolAddress];\n\n        // cal pending value\n        uint256 pendingDelegate = pendingDelegateOf[_poolAddress].add(poolInfo.bond);\n        uint256 pendingUndelegate = pendingUndelegateOf[_poolAddress].add(poolInfo.unbond);\n\n        uint256 deduction = pendingDelegate > pendingUndelegate ? pendingUndelegate : pendingDelegate;\n        pendingDelegate = pendingDelegate.sub(deduction);\n        pendingUndelegate = pendingUndelegate.sub(deduction);\n\n        // update pool state\n        poolInfo.bond = 0;\n        poolInfo.unbond = 0;\n        poolInfoOf[_poolAddress] = poolInfo;\n\n        _settle(_poolAddress, pendingDelegate, pendingUndelegate);\n    }\n```\n\n## Multisig\n\nTo ensure security and decentralization in managing and configuring the staking pool, we wil introduce multisig and implement it through threshold signatures.\n\n## Relay\n\nTo update delegation and undelegation operations in the contract, we have developed a newly designed and simplified service called Relay. This service triggers Era updates and synchronizes unrewarded data from the BSC chain that has not yet been synced to the contract, ensuring the accuracy of exchange rates. Because the reward will only be synced to BSC when it is greater than 1 BNB.\n\nIf the contract can synchronize any amount of stake rewards on BSC in the future, Relay will evolve into a permissionless service. Its function will be limited to triggering era updates on a scheduled basis, which will enhance security and decentralization even further.\n\n# Security Considerations\n\nRelay is an offline service that is vulnerable to slashing or attacks. If it remains unrecoverable for an extended period, users can call the settle function in the contract to initiate delegation and undelegation operations, allowing them to withdraw their assets. Furthermore, to ensure exchange rate stability, a rateChangeLimit has been implemented to ensure that the exchange rate increases linearly.\n\nIn addition, asset migration and security are important considerations. To ensure security, we will conduct audits and repeated testing, and closely monitor the migration process for any potential issues.\n\n# Copyright\n\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).",
    "iso8601Date": "2023-03-01T00:00:00+00:00",
    "basename": "sip3"
  },
  "sip4": {
    "title": "[SIP-4]A New Liquid Staking Implementation for MATIC Using the EVM LSD Architecture",
    "description": "In SIP-3 1, the StaFi team proposed a new implementation of BNB liquid staking using EVM LST Architecture, which represents a significant improvement in both the usability and security of the staking process. We are dedicated to further promoting the adoption of the EVM LST Architecture, and as part of this effort, we are proposing to migrate rMATIC to this new architecture and decoupling rMATIC from the StaFi Chain. After the migration is completed, both the usability and security of rMATIC will be improved.",
    "date": "2023-03-01T00:00:00.000Z",
    "status": 2,
    "ipfshash": null,
    "snapshotlink": null,
    "preview": "# Abstract\n\nIn SIP-3 1, the StaFi team proposed a new implementation …",
    "content": "\n\n# Abstract\n\nIn SIP-3 1, the StaFi team proposed a new implementation of BNB liquid staking using EVM LST Architecture, which represents a significant improvement in both the usability and security of the staking process. We are dedicated to further promoting the adoption of the EVM LST Architecture, and as part of this effort, we are proposing to migrate rMATIC to this new architecture and decoupling rMATIC from the StaFi Chain. After the migration is completed, both the usability and security of rMATIC will be improved.\n\n# Motivation\n\nrMATIC is an important part of the rToken, issued on the StaFi Chain. However, there are some usability issues. users need to have two wallets and sign multiple transactions to mint rMATIC.\n\nSwitching rMATIC to the EVM LSD architecture can solve the usability issues mentioned above. Additionally, we have made some security updates, including introducing the Native Staking contract interface for Polygon POS, and simplifying relay services, among others.\n\n# Specification\n\n## Overview\n\nSince the Polygon POS staking contract is deployed on the Ethereum, the MATIC staking contract has been designed to also be deployed on the Ethereum.\n\nThere are mainly three components:\n\n- Staking contracts on Ethereum: A new set of contracts has been designed to implement MATIC liquid staking on the Ethereum.\n- rMATIC relay: A newly designed and simplified service is used to trigger Era updates in the contract for delegation and undelegation operations. This is a permissionless service, which means that anyone can run it to update the era.\n- System staking contract on Ethereum: A system contract in charge of handling MATIC staking requests on Ethereum.\n\nThis new set of contracts has been specifically designed to enable liquid staking for MATIC on the Ethereum, offering all the fundamental features of a MATIC liquid staking service, including minting and burning rMATIC, depositing and withdrawing MATIC, as well as staking pool management, among other functionalities.\n\n## System Staking Contract Interface\n\nThe Polygon provides two contract interfaces for staking, which enable the implementation of staking-related features on the Ethereum by using `IGovStakeManager.sol` and `IValidatorShare.sol`.\n\n```js\npragma solidity 0.7.6;\n\n// SPDX-License-Identifier: GPL-3.0-only\n\ninterface IGovStakeManager {\n    function migrateDelegation(uint256 fromValidatorId, uint256 toValidatorId, uint256 amount) external;\n\n    function epoch() external view returns (uint256);\n\n    function withdrawalDelay() external view returns (uint256);\n\n    function getValidatorContract(uint256 validatorId) external view returns (address);\n}\n```\n\n```js\n// SPDX-License-Identifier: GPL-3.0-only\n\ninterface IValidatorShare {\n    struct DelegatorUnbond {\n        uint256 shares;\n        uint256 withdrawEpoch;\n    }\n\n    function withdrawRewards() external;\n\n    function buyVoucher(uint256 _amount, uint256 _minSharesToMint) external returns (uint256 amountToDeposit);\n\n    function sellVoucher_new(uint256 claimAmount, uint256 maximumSharesToBurn) external;\n\n    function unstakeClaimTokens_new(uint256 unbondNonce) external;\n\n    function restake() external returns (uint256, uint256);\n\n    function getTotalStake(address user) external view returns (uint256, uint256);\n\n    function getLiquidRewards(address user) external view returns (uint256);\n\n    function unbonds_new(address user, uint256 nonce) external view returns (DelegatorUnbond calldata);\n}\n```\n## Staking Pool\n\n### Data Structs\n\n```js\nEnumerableSet.AddressSet bondedPools;\nmapping(address => PoolInfo) public poolInfoOf;\nmapping(address => EnumerableSet.UintSet) validatorIdsOf;\nmapping(address => mapping(uint256 => uint256)) public maxClaimedNonceOf; // pool => validator Id => max claimed nonce\nmapping(uint256 => uint256) public eraRate;\n\n// unstake info\nuint256 public nextUnstakeIndex;\nmapping(uint256 => UnstakeInfo) public unstakeAtIndex;\nmapping(address => EnumerableSet.UintSet) unstakesOfUser;\n```\n\n- `poolInfoOf`: record the information and status about the staking pool .\n- `validatorsOf`: record sets of validator addresses, where each set represents the validators to which StaFi has delegated staking pool BNB.\n- `maxClaimedNonceOf`: record the maximum nonce that the address has claimed for reward\n- `eraRate`: record rBNB exchange rate\n- `unstakeAtIndex`: record the unstake info.\n- `unstakeOfUser`: record the unbond index of users who have not withdrawn.\n\n### Events\n\n```js\nevent Stake(address staker, address poolAddress, uint256 tokenAmount, uint256 rTokenAmount);\nevent Unstake(\n        address staker,\n        address poolAddress,\n        uint256 tokenAmount,\n        uint256 rTokenAmount,\n        uint256 burnAmount,\n        uint256 unstakeIndex\n    );\nevent Withdraw(address staker, address poolAddress, uint256 tokenAmount, int256[] unstakeIndexList);\nevent ExecuteNewEra(uint256 indexed era, uint256 rate);\nevent SetUnbondingDuration(uint256 unbondingDuration);\nevent Delegate(address pool, uint256 validator, uint256 amount);\nevent Undelegate(address pool, uint256 validator, uint256 amount);\nevent NewReward(address pool, uint256 amount);\nevent NewClaimedNonce(address pool, uint256 validator, uint256 nonce);\n```\n\n### Function\n\n`getRate`: get the exchange rate of rBNB.\n\n```js\nfunction getRate() external view override returns (uint256) {\n  return rate;\n}\n```\n\n`getBondedPools`: get the sets of staking pool addresses.\n\n```js\nfunction getBondedPools() external view returns (address[] memory pools) {\n        pools = new address[](bondedPools.length());\n        for (uint256 i = 0; i < bondedPools.length(); ++i) {\n            pools[i] = bondedPools.at(i);\n        }\n        return pools;\n    }\n```\n\n`getValidatorsOf`: get the sets of validator addresses, where each set represents the validators to which StaFi has delegated staking pool BNB.\n\n```js\nfunction getValidatorsOf(address _poolAddress) external view returns (address[] memory validators) {\n        validators = new address[](validatorsOf[_poolAddress].length());\n        for (uint256 i = 0; i < validatorsOf[_poolAddress].length(); ++i) {\n            validators[i] = validatorsOf[_poolAddress].at(i);\n        }\n        return validators;\n    }\n```\n`getUnstakeIndexListOf`: get the unstake index List.\n\n```js\nfunction getUnstakeIndexListOf(address _staker) external view returns (uint256[] memory unstakeIndexList) {\n        unstakeIndexList = new uint256[](unstakeOfUser[_staker].length());\n        for (uint256 i = 0; i < unstakeOfUser[_staker].length(); ++i) {\n            unstakeIndexList[i] = unstakeOfUser[_staker].at(i);\n        }\n        return unstakeIndexList;\n    }\n```\n\n`stake`: allow users to perform stake operations, stake BNB into the staking pool, and receive rBNB in return.\n\n```js\nfunction stake(uint256 _stakeAmount) external payable {\n        stakeWithPool(bondedPools.at(0), _stakeAmount);\n    }\n```\n\n`unstake`: allow users to perform unstake operations, burn rBNB, and record the corresponding amount of BNB.\n\n```js\nfunction unstake(uint256 _rTokenAmount) external payable {\n        unstakeWithPool(bondedPools.at(0), _rTokenAmount);\n    }\n```\n\n`withdraw`: allow users to perform withdrawal operations and withdraw unstaked BNB to their wallet.\n\n```js\nfunction withdraw() external payable {\n        withdrawWithPool(bondedPools.at(0));\n    }\n```\n\n## Relay\n\nTo update delegation and undelegation operations in the contract, we have developed a newly designed and simplified service called Relay. This service triggers Era updates and synchronizes unrewarded data from the BSC chain that has not yet been synced to the contract, ensuring the accuracy of exchange rates. Because the reward will only be synced to BSC when it is greater than 1 BNB.\n\n# Security Considerations\n\nRelay is an offline service that is vulnerable to slashing or attacks. If it remains unrecoverable for an extended period, users can call the settle function in the contract to initiate delegation and undelegation operations, allowing them to withdraw their assets. Furthermore, to ensure exchange rate stability, a rateChangeLimit has been implemented to ensure that the exchange rate increases linearly.\n\nIn addition, asset migration and security are important considerations. To ensure security, we will conduct audits and repeated testing, and closely monitor the migration process for any potential issues.\n\n# Copyright\n\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).",
    "iso8601Date": "2023-03-01T00:00:00+00:00",
    "basename": "sip4"
  },
  "sip5": {
    "title": "[SIP-5] Enhancing User Experience and Branding through Merging rToken Applications on StaFi Chain and StaFi Hub ",
    "description": "This proposal seeks to merge the rToken applications on the StaFi Chain and the StaFi Hub. This will simplify the user experience and make it easier for StaFi to reach a wider audience.",
    "date": "2023-03-01T00:00:00.000Z",
    "status": 2,
    "ipfshash": null,
    "snapshotlink": null,
    "preview": "# Abstract\n\nStaFi is a multi-chain liquid staking protocol that …",
    "content": "\n\n# Abstract\n\nStaFi is a multi-chain liquid staking protocol that enables users to unlock the liquidity of their staked assets. It offers extensive token support for various blockchain ecosystems including EVM chains like ETH, MATIC, and BNB, as well as Cosmos chains such as ATOM, IRIS, HUAHUA, and SWTH. Furthermore, it supports Polkadot-based chains like DOT and KSM, and Solana chains like SOL.\n\nPreviously, the rToken applications on the StaFi Chain and the StaFi Hub operated and updated independently. This led to some confusion among users, as they were not sure which application to use. It also made it difficult for StaFi to promote its products and services to a wider audience.\n\nThis proposal seeks to merge the rToken applications on the StaFi Chain and the StaFi Hub. This will simplify the user experience and make it easier for StaFi to reach a wider audience.\n\n# Motivation\n\nIn SIP-2, we explored the possibility of decoupling rTokens to improve the overall rToken experience. As part of this effort, we are working to merge the rToken applications on both the StaFi Chain and StaFi Hub. This integration will provide users with a seamless and consistent experience, eliminating any potential confusion that may result from using separate applications on different platforms.\n\nMoreover, the merger can lead to improved operational efficiency by consolidating resources and streamlining development efforts. With a single application to maintain and update, StaFi’s development team can focus on enhancing the protocol’s features and functionality, rather than allocating resources to maintaining and updating two separate applications. This will result in quicker updates, faster bug fixes, and a more efficient allocation of resources, benefiting both the development team and the users of StaFi.\n\nIn addition, the merger can enhance StaFi’s branding by presenting a more cohesive and unified image to the community. Consolidating the rToken applications on a single platform can create a more seamless and recognizable brand identity, increasing brand awareness and recognition in the market. This can also improve the user experience and perception of StaFi, ultimately driving increased adoption and usage of the protocol. By improving both operational and branding efficiency, the merger can help StaFi achieve its goals and objectives more effectively.\n\n# Specification\n\nCurrently, users must differentiate between the rToken applications on the StaFi Chain and StaFi Hub to stake and unstake tokens, leading to suboptimal user experience.\n\nTo address these issues, we propose a new user experience that involves merging the rToken applications on the StaFi Chain and StaFi Hub into a single application. This application will differentiate tokens based on their underlying chain ecosystem, and users can switch between different chains to stake and unstake tokens within the corresponding ecosystem. The specific differentiation rules are as follows:\n\n- EVM: ETH, MATIC, BNB\n- Cosmos: ATOM, IRIS, SWTH, HUAHUA\n- Polkadot: FIS,DOT, KSM\n- Solana: SOL\n\nMoreover, we have redesigned the UI and UX of the new rToken app to streamline user operations. The new design provides a more consistent and cohesive experience, eliminating any confusion arising from using separate applications on different platforms. This creates a streamlined and user-friendly interface, making it easier for users to understand the functionality and benefits of StaFi.\n\nFurthermore, we have unified our technology and services, creating a more efficient maintenance and expansion process. With only one set of services to maintain, StaFi’s development team can focus on enhancing the protocol’s features and functionality, rather than allocating resources to maintaining and updating separate applications. This leads to faster updates, bug fixes, and more efficient resource allocation, benefiting both the development team and the users of StaFi.\n\nAt the operational level, we will consolidate accounts and focus our operational resources on the StaFi_Protocol account. Additionally, we will merge related documents, such as the user guide, and migrate them from GitBook to GitHub. This migration will enable everyone to contribute to the content through GitHub, making it easier to update and maintain our documentation. Overall, these updates to our product and technology will enhance the user experience and make our maintenance and expansion processes more efficient.\n\nOverall, these updates to our product and technology will enhance the user experience and make our maintenance and expansion processes more efficient.\n\n# Copyright\nCopyright and related rights waived via CC0 .",
    "iso8601Date": "2023-03-01T00:00:00+00:00",
    "basename": "sip5"
  },
  "sip6": {
    "title": "[SIP-6]Proposal To Remove Redundant Bridges On The rBridge",
    "description": "As StaFi transitions to its new charter - which includes a new rToken construction and updated Tokenomics, several infrastructures require modifications to align with these changes. A notable example of these updates is the recent launch of the rToken merged app.",
    "date": "2023-03-01T00:00:00.000Z",
    "status": 2,
    "ipfshash": null,
    "snapshotlink": null,
    "preview": "# Abstract\n\nAs StaFi transitions to its new charter - which includes …",
    "content": "\n\n# Abstract\n\nAs StaFi transitions to its new charter - which includes a new rToken construction and updated Tokenomics, several infrastructures require modifications to align with these changes. A notable example of these updates is the recent launch of the rToken merged app.\n\nThis proposal outlines a forthcoming update concerning the rBridge. The rBridge is designed to enhance the interoperability of rTokens issued on the StaFi Chain or StaFi Hub.These rTokens can be seamlessly transferred to target chains, such as Ethereum, BSC, and Cosmos, and can be integrated into DeFi. With this update, certain bridges within the rBridge tool will be removed to mitigate potential risks associated with unused bridges.\n\n# Motivation\n\nThere are 3 simple reasons that we need to do the update:\n- To mitigate potential risks from unused bridges.\n- To conserve development resources.\n- To align with the protocol’s latest updates.\n\n# Specifications\n\nThe chart below illustrates StaFi’s currently available bridges for the rTokens and FIS. It also highlights the recommended bridges for removal and suggests which assets should reside on the target chains. For example, the two-way bridge for rETH between StaFi Chain and Ethereum is recommended for removal, given that rETH is exclusively issued on Ethereum and participates in Ethereum’s DeFi ecosystem.\n\nDirect removal of the bridges could pose a problem, as some assets might end up trapped on unintended chains, rendering them ineffective. Based on our analysis, we suggest offering a 1-month window for community members to bridge their assets. During this period, users can transfer their assets to the desired chains before the bridges are removed.\n\nThere would be no incentive to retain assets on an unintended chain. If you don’t possess any assets on these chains, no action is required on your part.\n\n# Following Actions\n\nThis is a signal proposal, and we welcome all feedback.\n\nShould no critical concerns be raised in this discussion, the 1-month window will commence at 0:00 UTC on 15th Aug 2023 and conclude at 0:00 UTC on 15th Sept 2023. The bridges marked for removal in the table above will be removed following this period.",
    "iso8601Date": "2023-03-01T00:00:00+00:00",
    "basename": "sip6"
  }
}
